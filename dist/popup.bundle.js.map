{"version":3,"file":"popup.bundle.js","mappings":"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","sources":["webpack:///./popup.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    console.log('Popup script loaded');\r\n\r\n    // Debug helper\r\n    function debug(msg) {\r\n        console.log(msg);\r\n        const debugDiv = document.getElementById('debug');\r\n        if (debugDiv) {\r\n            debugDiv.textContent += msg + '\\n';\r\n        }\r\n    }\r\n\r\n    // Hide all tabs except flashcards initially\r\n    document.querySelectorAll('.yomisaver-tab-content:not(#flashcards)').forEach(content => {\r\n        content.classList.add('hidden');\r\n    });\r\n\r\n    // Tab switching\r\n    document.querySelectorAll('.yomisaver-tab').forEach(tab => {\r\n        debug('Found tab: ' + tab.dataset.tab);\r\n        tab.addEventListener('click', () => {\r\n            debug('Tab clicked: ' + tab.dataset.tab);\r\n            \r\n            // Special handling for acknowledgements\r\n            const isAcknowledgementsVisible = !document.getElementById('acknowledgements').classList.contains('hidden');\r\n            if (isAcknowledgementsVisible) {\r\n                document.getElementById('acknowledgements').classList.add('hidden');\r\n                document.getElementById('settings').classList.remove('hidden');\r\n            }\r\n            \r\n            // Remove active and hidden classes from all tabs\r\n            document.querySelectorAll('.yomisaver-tab-content').forEach(content => {\r\n                content.classList.remove('active');\r\n                content.classList.add('hidden');\r\n            });\r\n            \r\n            // Remove active class from all tabs\r\n            document.querySelectorAll('.yomisaver-tab').forEach(t => {\r\n                t.classList.remove('active');\r\n            });\r\n            \r\n            // Show selected content and activate tab\r\n            const tabId = tab.dataset.tab;\r\n            const content = document.getElementById(tabId);\r\n            content.classList.remove('hidden');\r\n            content.classList.add('active');\r\n            tab.classList.add('active');\r\n        });\r\n    });\r\n\r\n    // Load flashcards\r\n    loadFlashcards();\r\n\r\n    // Settings handlers\r\n    const popupSize = document.getElementById('popupSize');\r\n    const fontSize = document.getElementById('fontSize');\r\n\r\n    // Update size functions\r\n    function updatePopupSize(value) {\r\n        const size = value / 100;\r\n        chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\r\n            chrome.tabs.sendMessage(tabs[0].id, {\r\n                action: 'updatePopupSize',\r\n                size: size\r\n            });\r\n        });\r\n    }\r\n\r\n    function updateFontSize(value) {\r\n        const size = value / 100;\r\n        chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\r\n            chrome.tabs.sendMessage(tabs[0].id, {\r\n                action: 'updateFontSize',\r\n                size: size\r\n            });\r\n        });\r\n    }\r\n\r\n    // Add input handlers for real-time updates\r\n    popupSize.addEventListener('input', (e) => {\r\n        updatePopupSize(e.target.value);\r\n    });\r\n\r\n    fontSize.addEventListener('input', (e) => {\r\n        updateFontSize(e.target.value);\r\n    });\r\n\r\n    // Save settings on change\r\n    popupSize.addEventListener('change', (e) => {\r\n        chrome.storage.sync.set({ 'popupSize': e.target.value });\r\n    });\r\n\r\n    fontSize.addEventListener('change', (e) => {\r\n        chrome.storage.sync.set({ 'fontSize': e.target.value });\r\n    });\r\n\r\n    // Add event listener for toggle furigana button\r\n    const toggleFuriganaButton = document.getElementById('toggleFurigana');\r\n    toggleFuriganaButton.addEventListener('click', () => {\r\n        chrome.storage.sync.get('furiganaVisible', (data) => {\r\n            const furiganaVisible = !data.furiganaVisible;\r\n            chrome.storage.sync.set({ 'furiganaVisible': furiganaVisible }, () => {\r\n                toggleFuriganaButton.textContent = furiganaVisible ? 'Hide Furigana' : 'Show Furigana';\r\n                chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\r\n                    chrome.tabs.sendMessage(tabs[0].id, {\r\n                        action: 'toggleFurigana',\r\n                        visible: furiganaVisible\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    // Load saved settings\r\n    chrome.storage.sync.get(['popupSize', 'fontSize', 'furiganaVisible'], (data) => {\r\n        if (data.popupSize) {\r\n            popupSize.value = data.popupSize;\r\n            updatePopupSize(data.popupSize);\r\n        }\r\n        if (data.fontSize) {\r\n            fontSize.value = data.fontSize;\r\n            updateFontSize(data.fontSize);\r\n        }\r\n        if (data.furiganaVisible !== undefined) {\r\n            toggleFuriganaButton.textContent = data.furiganaVisible ? 'Hide Furigana' : 'Show Furigana';\r\n            chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\r\n                chrome.tabs.sendMessage(tabs[0].id, {\r\n                    action: 'toggleFurigana',\r\n                    visible: data.furiganaVisible\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    // Attach export functionality to button\r\n    document.getElementById('export-flashcards').addEventListener('click', exportFlashcards);\r\n\r\n    // Add event listener for acknowledgements button\r\n    document.getElementById('showAcknowledgements').addEventListener('click', (e) => {\r\n        e.stopPropagation(); // Prevent event bubbling\r\n        const settings = document.getElementById('settings');\r\n        const acknowledgements = document.getElementById('acknowledgements');\r\n        settings.classList.add('hidden');\r\n        acknowledgements.classList.remove('hidden');\r\n        acknowledgements.classList.add('active');\r\n    });\r\n\r\n    // Add event listener for back button in acknowledgements\r\n    document.getElementById('backToSettings').addEventListener('click', (e) => {\r\n        e.stopPropagation(); // Prevent event bubbling\r\n        const settings = document.getElementById('settings');\r\n        const acknowledgements = document.getElementById('acknowledgements');\r\n        acknowledgements.classList.add('hidden');\r\n        acknowledgements.classList.remove('active');\r\n        settings.classList.remove('hidden');\r\n        settings.classList.add('active');\r\n    });\r\n});\r\n\r\nfunction loadFlashcards() {\r\n    console.log('Loading flashcards...');\r\n    chrome.storage.local.get('vocabList', (data) => {\r\n        console.log('Vocab data:', data);\r\n        const vocabList = data.vocabList || [];\r\n        const vocabContainer = document.getElementById('vocab-container');\r\n        \r\n        if (!vocabContainer) return;\r\n\r\n        if (vocabList.length === 0) {\r\n            vocabContainer.innerHTML = '<p class=\"yomisaver-coming-soon\">No flashcards saved yet!</p>';\r\n            return;\r\n        }\r\n\r\n        vocabContainer.innerHTML = '';\r\n        vocabList.reverse().forEach((entry, index) => {\r\n            console.log('Processing flashcard entry:', entry);\r\n\r\n            const entryElement = document.createElement('div');\r\n            entryElement.className = 'yomisaver-vocab-entry';\r\n            entryElement.innerHTML = `\r\n                <div class=\"vocab-header\">\r\n                    <input type=\"checkbox\" class=\"select-flashcard\" data-index=\"${index}\">\r\n                    <div class=\"word-info\">\r\n                        <h3>${entry.word}</h3>\r\n                        ${entry.reading ? `<p class=\"reading\">${entry.reading}</p>` : ''}\r\n                    </div>\r\n                    <button class=\"delete-vocab\" title=\"Delete flashcard\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\r\n                            <path fill=\"currentColor\" d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                ${entry.wordInfo?.meanings?.map(m => \r\n                    `<div class=\"meaning\">${m.definitions.join('; ')}</div>`\r\n                ).join('') || ''}\r\n                ${entry.wordInfo?.jlpt?.length ? \r\n                    `<div class=\"jlpt\">${entry.wordInfo.jlpt.join(', ').toUpperCase()}</div>` : ''}\r\n            `;\r\n\r\n            // Add delete handler directly to the button\r\n            const deleteBtn = entryElement.querySelector('.delete-vocab');\r\n            deleteBtn.addEventListener('click', () => {\r\n                chrome.storage.local.get('vocabList', (data) => {\r\n                    const newList = data.vocabList.filter((_, i) => i !== index);\r\n                    chrome.storage.local.set({ vocabList: newList }, () => {\r\n                        entryElement.remove();\r\n                        if (newList.length === 0) {\r\n                            vocabContainer.innerHTML = '<p class=\"yomisaver-coming-soon\">No flashcards saved yet!</p>';\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            vocabContainer.appendChild(entryElement);\r\n        });\r\n    });\r\n}\r\n\r\nfunction exportFlashcards() {\r\n    chrome.storage.local.get('vocabList', (data) => {\r\n        const vocabList = data.vocabList || [];\r\n        const selectedIndexes = Array.from(document.querySelectorAll('.select-flashcard:checked')).map(cb => parseInt(cb.dataset.index));\r\n        const selectedFlashcards = selectedIndexes.map(index => vocabList[index]);\r\n\r\n        if (selectedFlashcards.length === 0) {\r\n            alert('No flashcards selected for export.');\r\n            return;\r\n        }\r\n\r\n        const ankiData = selectedFlashcards.map(entry => {\r\n            const front = entry.word;\r\n            const back = `\r\n                ${entry.reading ? `<div>Reading: ${entry.reading}</div>` : ''}\r\n                ${entry.wordInfo?.meanings?.map(m => `<div>Definition: ${m.definitions.join('; ')}</div>`).join('') || ''}\r\n                ${entry.wordInfo?.jlpt?.length ? `<div>JLPT: ${entry.wordInfo.jlpt.join(', ').toUpperCase()}</div>` : ''}\r\n            `.trim().replace(/\\n\\s+/g, ' '); // Remove extra whitespace\r\n            const tags = entry.wordInfo?.jlpt?.join(' ') || '';\r\n            return `${front}\\t${back}\\t${tags}`;\r\n        }).join('\\n');\r\n\r\n        const blob = new Blob([ankiData], { type: 'text/tab-separated-values' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'flashcards.txt';\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        URL.revokeObjectURL(url);\r\n    });\r\n}\r\n\r\n// Listen for vocab updates\r\nchrome.runtime.onMessage.addListener((message) => {\r\n    if (message.action === 'vocabUpdated') {\r\n        loadFlashcards();\r\n    }\r\n});\r\n\r\n// Add message listener for furigana toggle\r\nchrome.runtime.onMessage.addListener((message) => {\r\n    if (message.action === 'toggleFurigana') {\r\n        const furiganaElements = document.querySelectorAll('rt');\r\n        furiganaElements.forEach(rt => {\r\n            rt.style.display = message.visible ? 'block' : 'none';\r\n        });\r\n    }\r\n});\r\n\r\n// Initialize\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    loadFlashcards();\r\n\r\n    // Add event listeners for acknowledgements and back button\r\n    const showAcknowledgementsButton = document.getElementById('showAcknowledgements');\r\n    const backToSettingsButton = document.getElementById('backToSettings');\r\n    const settingsSection = document.getElementById('settings');\r\n    const acknowledgementsSection = document.getElementById('acknowledgements');\r\n\r\n    if (showAcknowledgementsButton && backToSettingsButton && settingsSection && acknowledgementsSection) {\r\n        showAcknowledgementsButton.addEventListener('click', () => {\r\n            settingsSection.classList.add('hidden');\r\n            acknowledgementsSection.classList.remove('hidden');\r\n        });\r\n\r\n        backToSettingsButton.addEventListener('click', () => {\r\n            acknowledgementsSection.classList.add('hidden');\r\n            settingsSection.classList.remove('hidden');\r\n        });\r\n    }\r\n});"],"names":["loadFlashcards","console","log","chrome","storage","local","get","data","vocabList","vocabContainer","document","getElementById","length","innerHTML","reverse","forEach","entry","index","_entry$wordInfo","_entry$wordInfo2","entryElement","createElement","className","concat","word","reading","wordInfo","meanings","map","m","definitions","join","jlpt","toUpperCase","querySelector","addEventListener","newList","filter","_","i","set","remove","appendChild","exportFlashcards","selectedFlashcards","Array","from","querySelectorAll","cb","parseInt","dataset","ankiData","_entry$wordInfo3","_entry$wordInfo4","_entry$wordInfo5","front","back","trim","replace","tags","blob","Blob","type","url","URL","createObjectURL","a","href","download","body","click","removeChild","revokeObjectURL","alert","debug","msg","debugDiv","textContent","content","classList","add","tab","contains","t","tabId","popupSize","fontSize","updatePopupSize","value","size","tabs","query","active","currentWindow","sendMessage","id","action","updateFontSize","e","target","sync","toggleFuriganaButton","furiganaVisible","visible","undefined","stopPropagation","settings","acknowledgements","runtime","onMessage","addListener","message","rt","style","display","showAcknowledgementsButton","backToSettingsButton","settingsSection","acknowledgementsSection"],"sourceRoot":""}